import java.nio.file.Files
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

def CLOUD_PUBSUB_VERSION = '1.113.6'

repositories {
    mavenCentral()
}

dependencies {
    compile "com.google.cloud:google-cloud-pubsub:${CLOUD_PUBSUB_VERSION}"

    compile "io.grpc:grpc-api:1.39.0"
    compile "io.grpc:grpc-context:1.39.0"
    compile "io.grpc:grpc-stub:1.39.0"
    compile "io.grpc:grpc-protobuf:1.39.0"
    compile "io.grpc:grpc-protobuf-lite:1.39.0"
    compile "com.google.api:api-common:2.0.0"
    compile "javax.annotation:javax.annotation-api:1.3.2"
    compile "com.google.protobuf:protobuf-java:3.17.3"
    compile "com.google.api.grpc:proto-google-common-protos:2.3.2"
    compile "com.google.api.grpc:proto-google-cloud-pubsub-v1:1.95.6"
    compile "com.google.api.grpc:proto-google-iam-v1:1.0.14"
    compile "com.google.guava:guava:30.1.1-jre"
    compile "com.google.guava:failureaccess:1.0.1"
    compile "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"
    compile "org.checkerframework:checker-qual:3.8.0"
    compile "com.google.j2objc:j2objc-annotations:1.3"
    compile "com.google.api:gax:2.0.0"
    compile "com.google.auth:google-auth-library-oauth2-http:1.0.0"
    compile "com.google.http-client:google-http-client-gson:1.39.2"
    compile "com.google.code.gson:gson:2.8.7"
    compile "com.google.api:gax-grpc:2.0.0"
    compile "io.grpc:grpc-auth:1.39.0"
    compile "com.google.auth:google-auth-library-credentials:1.0.0"
    compile "io.grpc:grpc-netty-shaded:1.39.0"
    compile "io.grpc:grpc-alts:1.39.0"
    compile "io.grpc:grpc-grpclb:1.39.0"
    compile "com.google.protobuf:protobuf-java-util:3.17.3"
    compile "org.conscrypt:conscrypt-openjdk-uber:2.5.1"
    compile "org.threeten:threetenbp:1.5.1"
    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile "io.opencensus:opencensus-api:0.28.0"
    compile "io.grpc:grpc-core:1.39.0"
    compile "com.google.android:annotations:4.1.1.4"
    compile "org.codehaus.mojo:animal-sniffer-annotations:1.20"
    compile "io.perfmark:perfmark-api:0.23.0"
    compile "com.google.errorprone:error_prone_annotations:2.8.1"
    compile "com.google.auto.value:auto-value-annotations:1.8.2"
    compile "com.google.http-client:google-http-client:1.39.2"
    compile "org.apache.httpcomponents:httpclient:4.5.13"
    compile "commons-logging:commons-logging:1.2"
    compile "commons-codec:commons-codec:1.15"
    compile "org.apache.httpcomponents:httpcore:4.4.14"
    compile "io.opencensus:opencensus-contrib-http-util:0.28.0"
}


task generateGemJarRequiresFile {
    doLast {
        File jars_file = file('lib/logstash-output-google_pubsub_jars.rb')
        jars_file.newWriter().withWriter { w ->
            w << "# AUTOGENERATED BY THE GRADLE SCRIPT. DO NOT EDIT.\n\n"
            w << "require \'jar_dependencies\'\n"
            configurations.runtime.allDependencies.each {
                w << "require_jar(\'${it.group}\', \'${it.name}\', \'${it.version}\')\n"
            }
        }
    }
}

task vendor {
    doLast {
        String vendorPathPrefix = "vendor/jar-dependencies"
        configurations.runtime.allDependencies.each { dep ->
            File f = configurations.runtime.filter { it.absolutePath.contains("${dep.group}/${dep.name}/${dep.version}") }.singleFile
            String groupPath = dep.group.replaceAll('\\.', '/')
            File newJarFile = file("${vendorPathPrefix}/${groupPath}/${dep.name}/${dep.version}/${dep.name}-${dep.version}.jar")
            newJarFile.mkdirs()
            Files.copy(f.toPath(), newJarFile.toPath(), REPLACE_EXISTING)
        }
    }
}

vendor.dependsOn(generateGemJarRequiresFile)
